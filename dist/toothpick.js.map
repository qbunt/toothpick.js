{"version":3,"sources":["../toothpick.js"],"names":["toothpick","noConflict","root","exports","isNode","process","release","name","search","escapeRegExp","str","replace","cleanNonAlphaChars","getClassFriendlyName","toLowerCase","console","error","disableRightClick","bool","document","oncontextmenu","body","correctWidows","noWidows","text","split","length","pop","join","setCookie","cookieName","cookieVal","expiration","d","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","cookieArray","i","c","charAt","substring","indexOf","clearCookie","getAbsolutePosition","sOff","getScrollPositionOffset","left","top","props","el","getBoundingClientRect","x","y","offsetLeft","offsetTop","offsetParent","Math","round","doc","w","window","docEl","pageYOffset","pageXOffset","compatMode","documentElement","scrollLeft","scrollTop","joinPath","require","__dirname","path","flatten","Array","isArray","arr","concat","map","toPerc","portion","whole","getScrollPosition","deTop","deLeft","bodyLeft","bodyTop","replaceAll","find","string","RegExp"],"mappings":"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","file":"toothpick.js","sourcesContent":["var toothpick = function() {\n}\n\ntoothpick.noConflict = function() {\n  root.toothpick = toothpick\n  return toothpick\n}\n\n\n(function (exports) {\n    var isNode = (typeof process !== 'undefined') && (process.release.name.search(/node|io.js/) !== -1);\n\n    /**\n     * this returns escaped regex if you really have to\n     * @method escapeRegExp\n     * @param str - input string\n     * @returns {string}\n     */\n    exports.escapeRegExp = str =>\n        str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n\n    /**\n     * Drops all non-alphanumeric chars out of a string\n     * @param str - input string\n     * @returns {string}\n     */\n    exports.cleanNonAlphaChars = str => str.replace(/\\W/g, '');\n\n\n    /**\n     * Generates a CSS friendly classname out of a regular string\n     * @param str - input string\n     * @returns {string}\n     */\n    exports.getClassFriendlyName = str => {\n        if (typeof str === 'string')\n            str.replace(/[^\\w\\s]/gi, '').replace(/[^\\w]/gi, '-').toLowerCase();\n        else\n            if(console)\n                return console.error('this method requires a string input');\n            else\n                return \"\";\n    };\n\n    /**\n     * Disables the right click button. Please don't be a terrible person and use this in a sane way.\n     * @param bool - whether or not you'd like to disable or not\n     */\n    if(!isNode){\n        exports.disableRightClick = function(bool) {\n            var bool = bool || false;\n\n            if( bool === true )\n                document.oncontextmenu = document.body.oncontextmenu = () => false;\n            else\n                document.oncontextmenu = document.body.oncontextmenu = null;\n\n        };\n    }\n\n    /**\n     *  corrects widows by dropping in a &nbsp; entity whenever it's needed.\n     * @param text - string of paragraph text\n     * @returns {string}\n     */\n    exports.correctWidows = text => {\n        let noWidows = text.split(\" \");\n        if (noWidows.length > 1) {\n            noWidows[noWidows.length-2] += \"&nbsp;\" + noWidows[noWidows.length-1];\n            noWidows.pop();\n            noWidows = noWidows.join(\" \");\n        }\n        return noWidows;\n    };\n\n    /**\n     * ...sets a cookie.\n     * @param cookieName - cookie's name\n     * @param cookieVal - cookie's value\n     * @param expiration - cookie's expiration\n     */\n    if(!isNode){\n        exports.setCookie = (cookieName, cookieVal, expiration) => {\n            let d = new Date();\n            d.setTime(d.getTime() + (expiration*24*60*60*1000));\n            let expires = \"expires=\"+d.toUTCString();\n            document.cookie = cookieName + \"=\" + cookieVal + \"; \" + expires;\n        };\n    }\n    /**\n     * gets that cookie of name 'cookieName' or cookies delimited with ';'\n     * @param cookieName\n     * @returns {*} - the cookie\n     */\n    if(!isNode) {\n        exports.getCookie = cookieName => {\n            let name = cookieName + \"=\";\n            var cookieArray = document.cookie.split(';');\n            for (var i = 0; i < cookieArray.length; i++) {\n                let c = cookieArray[i];\n                while (c.charAt(0) == ' ') c = c.substring(1);\n                if (c.indexOf(name) == 0) return c.substring(name.length, c.length);\n            }\n            return \"\";\n        };\n    }\n\n    /**\n     * Clears a cookie by setting the cookie's expiration to epoch\n     * @param cookieName - the full name of the cookie you're clearing\n     */\n    if(!isNode)\n        exports.clearCookie = cookieName => {\n            document.cookie = cookieName + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        };\n\n    /**\n     * Returns the 'top' and 'left' css value for any element passed in as 'x' and 'y'. Useful for animations that need to happen arbitrarily on the page.\n     * @param el - the element you'd like to get the absolute position of\n     * @returns {{x: number, y: number}}\n     */\n    if(!isNode)\n        exports.getAbsolutePosition = el => {\n            let sOff = getScrollPositionOffset(), left = 0, top = 0, props;\n\n            if (el.getBoundingClientRect) {\n                props = el.getBoundingClientRect();\n                left = props.left + sOff.x;\n                top = props.top + sOff.y;\n            } else {\n                // for older browsers...\n                do {\n                    left += el.offsetLeft;\n                    top += el.offsetTop;\n                } while ((el = el.offsetParent));\n            }\n            return {x: Math.round(left), y: Math.round(top)};\n        };\n\n\n    /**\n     * Internal method for getTotalPosition NOTE: not accessible from outside the library itself\n     * @returns {{x: *, y: *}} - the X and Y position of the cookie\n     */\n    if(!isNode) {\n        exports.getScrollPositionOffset = () => {\n            var doc = document;\n            var w = window;\n            var x, y, docEl;\n\n            if (typeof w.pageYOffset === 'number') {\n                x = w.pageXOffset;\n                y = w.pageYOffset;\n            } else {\n                docEl = (doc.compatMode && doc.compatMode === 'CSS1Compat') ?\n                    doc.documentElement : doc.body;\n                x = docEl.scrollLeft;\n                y = docEl.scrollTop;\n            }\n            return {x: x, y: y};\n        };\n    }\n    /**\n     * joins the current path with the directory name\n     * @param path\n     */\n    if(isNode){\n        exports.joinPath = path => require('path').join(__dirname, path);\n    }\n\n    /**\n     * flattens a deeply nested array\n     * @param arr\n     */\n    exports.flatten = arr => Array.isArray(arr) ? [].concat(...arr.map(flatten)) : arr;\n\n    /**\n     * returns a percentage string based on the portion & whole input\n     * @param portion\n     * @param whole\n     */\n    exports.toPerc = (portion, whole) => `${Math.round(portion * 100 / whole)}%`;\n\n    /**\n     * accessor for the scroll x and scroll y position, patched for most browsers\n     * @returns {Array}\n     */\n    exports.getScrollPosition = () => {\n        let x = 0, y = 0;\n\n        // these are all for convenience\n        let deTop = document.documentElement.scrollTop;\n        let deLeft = document.documentElement.scrollLeft;\n        let bodyLeft = document.body.scrollLeft;\n        let bodyTop = document.body.scrollTop;\n\n        if( typeof( window.pageYOffset ) == 'number' ) {\n            // Netscape\n            x = window.pageXOffset;\n            y = window.pageYOffset;\n        } else if( document.body && ( bodyLeft || bodyTop ) ) {\n            // DOM\n            x = bodyLeft;\n            y = bodyTop;\n        } else if( document.documentElement && ( deLeft || deTop ) ) {\n            // IE6 standards compliant mode\n            x = deLeft;\n            y = deTop;\n        }\n        return [x, y];\n    };\n\n    /**\n     * simple find and replace wrapper for strings\n     * @param find - string value you'd like to find\n     * @param replace - string value you'd like to replace\n     * @param string - the string you'd like to search over\n     * @returns {string} - the output string\n     */\n    exports.replaceAll = function(find, replace, string) {\n        return string.replace(new RegExp(this.escapeRegExp(find), 'g'), replace);\n    }\n\n})(typeof exports === 'undefined'? this['toothpick']={}: exports);"]}